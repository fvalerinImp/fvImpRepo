//
//  ToDoTasksListInteractor.swift
//  EjemploCleanSwift
//
//  Created by Federico Valerin on 6/6/17.
//  Copyright (c) 2017 Federico Valerin. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so you can apply
//  clean architecture to your iOS and Mac projects, see http://clean-swift.com
//

import UIKit

protocol ToDoTasksListInteractorInput{
    func requestTestInformation(request: ToDoTasksList.TestInformation.Request)
    func requestTareas(request: ToDoTasksList.clsDataSource.Request)
}

protocol ToDoTasksListInteractorOutput{
    //func presentSomething(response: ToDoTasksList.Response)
    func responseTestInformation(response: ToDoTasksList.TestInformation.Response)
    func responseTareas(response: ToDoTasksList.clsDataSource.Response)
}

class ToDoTasksListInteractor: ToDoTasksListInteractorInput{
    var output: ToDoTasksListInteractorOutput!
    var worker = ToDoTasksListWorker()
    
    
    func requestTestInformation(request: ToDoTasksList.TestInformation.Request) {
        let res = ToDoTasksList.TestInformation.Response(number: worker.Multiply(number: request.numberText))
        output.responseTestInformation(response: res)
    }
    
    func requestTareas(request: ToDoTasksList.clsDataSource.Request) {
        let res = ToDoTasksList.clsDataSource.Response(arrTareas: worker.ObtenerTareas())
        
        output.responseTareas(response: res)
    }
    
    
    // MARK: Business logic
    
//    func doSomething(request: ToDoTasksList.Request){
//        // NOTE: Create some Worker to do the work
//        
//        worker = ToDoTasksListWorker()
////        worker.doSomeWork()
//        
//        // NOTE: Pass the result to the Presenter
//        
//        let response = ToDoTasksList.Response()
////        output.presentSomething(response: response)
//    }
}
